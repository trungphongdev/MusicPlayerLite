import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.PendingIntent
import android.content.Context
import android.content.Intent
import android.graphics.Bitmap
import android.os.Build
import androidx.core.app.NotificationCompat
import androidx.media3.common.MediaItem
import androidx.media3.common.Player
import androidx.media3.session.MediaController
import androidx.media3.session.SessionToken

// ... (other imports)

// Assuming you have a MediaController instance:
val mediaController: MediaController = ...

// Actions
val actionPlay = NotificationCompat.Action(
    R.drawable.ic_play,
    "Play",
    PendingIntent.getBroadcast(
        context,
        0,
        Intent(ACTION_PLAY).setPackage(context.packageName),
        PendingIntent.FLAG_IMMUTABLE or PendingIntent.FLAG_UPDATE_CURRENT
    )
)
val actionPause = NotificationCompat.Action(R.drawable.ic_pause,
    "Pause",
    PendingIntent.getBroadcast(
        context,
        0,
        Intent(ACTION_PAUSE).setPackage(context.packageName),
        PendingIntent.FLAG_IMMUTABLE or PendingIntent.FLAG_UPDATE_CURRENT
    )
)
val actionNext = NotificationCompat.Action(
    R.drawable.ic_next,
    "Next",
    PendingIntent.getBroadcast(
        context,
        0,
        Intent(ACTION_NEXT).setPackage(context.packageName),
        PendingIntent.FLAG_IMMUTABLE or PendingIntent.FLAG_UPDATE_CURRENT
    )
)
val actionPrevious = NotificationCompat.Action(
    R.drawable.ic_previous,
    "Previous",
    PendingIntent.getBroadcast(
        context,
        0,
        Intent(ACTION_PREVIOUS).setPackage(context.packageName),
        PendingIntent.FLAG_IMMUTABLE or PendingIntent.FLAG_UPDATE_CURRENT
    )
)

// Get current media item
val currentMediaItem = mediaController.currentMediaItem

// Extract metadata
val title = currentMediaItem?.mediaMetadata?.title ?: "Unknown Title"
val artist = currentMediaItem?.mediaMetadata?.artist ?: "Unknown Artist"
val artwork = currentMediaItem?.mediaMetadata?.artworkData?.let {
    BitmapFactory.decodeByteArray(it, 0, it.size)
}

// Build the notification
val notificationBuilder = NotificationCompat.Builder(this, "channel_id")
    .setSmallIcon(R.drawable.notification_icon)
    .setContentTitle(title)
    .setContentText(artist)
    .setLargeIcon(artwork)
    .setStyle(
        androidx.media3.ui.PlayerNotificationUtil.MediaStyle(
            mediaSession = MediaSession.Builder(context, player).build()
        )
            .setShowActionsInCompactView(0, 1, 2)
            .setMediaSessionToken(sessionToken)
    )

// Add actions based on playback state
if (mediaController.isPlaying) {
    notificationBuilder.addAction(actionPause)
} else {
    notificationBuilder.addAction(actionPlay)
}
notificationBuilder.addAction(actionPrevious)
notificationBuilder.addAction(actionNext)

// Show the notification
notificationManager.notify(notificationId, notificationBuilder.build())